#!/usr/bin/env bash

#    al-polybar-pipemenu - an Openbox pipemenu for polybar manipulation
#    Written for ArchLabs by Nathaniel Maia <natemaaia10@gmail.com> 2017
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

HELP='\tal-polybar-pipemenu an Openbox Pipe Menu for Polybar
\tIt should normally be called from an openbox menu.
\nOptions:
\t-h --help   show this message
\n\tIf al-polybar-pipemenu is called with no options (the usual method),
\tit will output an xml openbox pipemenu for handling polybar sessions,
\tand editing configuration files.
\nFor more information, see "man polybar"
and "Help">"Polybar" in the ArchLabs menu.'

case "$@" in
    -h|--help)
        echo -e "$HELP"
        exit 0
esac

AL_COMMON_LIBDIR='/usr/lib/archlabs/common'
CPATH="$HOME/.config/polybar"
CONFIG="$CPATH/config"
if ! . "$AL_COMMON_LIBDIR/al-include.cfg" 2> /dev/null; then
    echo $"Error: Failed to source al-include.cfg in $AL_COMMON_LIBDIR"
    exit 1
fi

Editmenu() {
    if [[ $(pidof polybar) ]]; then
        menuSeparator
        menuSubmenu "RunningBar" "Running Bars"
        while read -r pid cmd; do
            if [[ ${cmd%% *} = polybar ]]; then
                CONF=${cmd##* }
                CONFIG=${HOME}/.config/polybar/config
                if [[ $CONF = polybar ]]; then
                    CONF="$CONFIG"
                fi
                if hash exo-open &>/dev/null; then
                    menuItem "$CONF" "exo-open $CONFIG"
                else
                    menuItem "$CONF" "termite -e '$EDITOR $CONFIG'"
                fi
            fi
        done <<< "$(pgrep -a polybar)"
        menuSubmenuEnd
    fi
}

Configs() {
    menuSubmenu "EditConfigs" "Edit Configs"
    if type al-polybar-edit &>/dev/null; then
        menuItem "Edit Polybar Configs" "al-polybar-edit"
    fi
    Editmenu
    menuSubmenuEnd
}

Launchmenu() {
    if type al-polybar-session &>/dev/null && [[ -f "$HOME/.config/polybar/sessions/openbox-sessionfile" ]]; then
        menuItem "Start Polybar Session" "al-polybar-session"
    fi
    if type al-polyzen &>/dev/null; then
        menuItem "Polybar Session GUI" "al-polyzen"
    fi
}

Killmenu() {
    if [[ "$(pidof polybar)" ]]; then
        menuItem "Stop All Bars" "pkill polybar"
    fi
}

menuStart "Polybarmenu" "Polybar"
Launchmenu
Killmenu
Configs
menuEnd
